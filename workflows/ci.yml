name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-audit:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: ubuntu
          POSTGRES_USER: ubuntu
          POSTGRES_DB: supply_chain_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: supply-chain-platform-clean/package-lock.json

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      working-directory: supply-chain-api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Seed test database
      working-directory: supply-chain-api
      env:
        DATABASE_URL: postgresql://ubuntu:ubuntu@localhost:5432/supply_chain_db
      run: |
        python import_data.py

    - name: Install Node.js dependencies
      working-directory: supply-chain-platform-clean
      run: npm ci

    - name: Run Jest unit tests
      working-directory: supply-chain-platform-clean
      run: npm test -- --coverage --watchAll=false

    - name: Build React app
      working-directory: supply-chain-platform-clean
      run: npm run build

    - name: Start Flask API
      working-directory: supply-chain-api
      env:
        DATABASE_URL: postgresql://ubuntu:ubuntu@localhost:5432/supply_chain_db
        FLASK_ENV: production
      run: |
        python src/main.py &
        sleep 10

    - name: Serve React build
      working-directory: supply-chain-platform-clean
      run: |
        npx serve -s dist -l 3000 &
        sleep 5

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './supply-chain-platform-clean/lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

    - name: Upload Lighthouse reports
      uses: actions/upload-artifact@v3
      with:
        name: lighthouse-reports
        path: .lighthouseci/

    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: supply-chain-platform-clean/coverage/

